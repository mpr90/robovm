package: org.robovm.apple.messageui
include: [foundation.yaml, uikit.yaml]
library: MessageUI
framework: MessageUI
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/MessageUI.framework/Headers/MessageUI.h
typedefs: {}
    
enums:
    MFMailComposeResult: {}
    MFMailComposeErrorCode:
        prefix: "MFMailComposeErrorCode"
    MessageComposeResult: {}
        
classes:
    MessageUI:
        annotations: ['@Marshaler(NSString.AsStringMarshaler.class)']

    MFMailComposeViewController:
        methods:
            '-setMessageBody:isHTML:':
                trim_after_first_colon: true
            '-addAttachmentData:mimeType:fileName:':
                trim_after_first_colon: true
            '-setBccRecipients:':
                parameters:
                    bccRecipients:
                        type: 'NSArray<NSString>'
            '-setCcRecipients:':
                parameters:
                    ccRecipients:
                        type: 'NSArray<NSString>'
            '-setToRecipients:':
                parameters:
                    toRecipients:
                        type: 'NSArray<NSString>'
    MFMessageComposeViewController:
        properties:
            'recipients':
                type: "NSArray<NSString>"
            'attachments':
                type: "NSArray<NSDictionary<NSString, ?>>"
        methods:
            '-addAttachmentURL:withAlternateFilename:':
                name: addAttachment
            '-addAttachmentData:typeIdentifier:filename:':
                name: addAttachment
            '+isSupportedAttachmentUTI:':
                trim_after_first_colon: true

protocols:
    MFMailComposeViewControllerDelegate:
        methods:
            '-mailComposeController:didFinishWithResult:error:':
                name: didFinish
    MFMessageComposeViewControllerDelegate:
        methods:
            '-messageComposeViewController:didFinishWithResult:':
                name: didFinish

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?MF.*):
        class: MessageUI
        name: "Function__#{g[0]}"

values:
    MF(.*ErrorDomain):
        name: "#{g[0]}"
        type: NSString
        
    MF(MessageComposeViewControllerAttachment.*):
        name: "#{g[0]}"
        type: NSString
    MFMessageComposeViewController(TextMessageAvailabilityDidChangeNotification):
        class: MFMessageComposeViewController
        name: "#{g[0]}"
        type: NSString
    MFMessageComposeViewController(TextMessageAvailabilityKey):
        class: MFMessageComposeViewController
        name: "#{g[0]}"
        type: NSString
        visibility: protected
    MF(.*Key):
        name: "#{g[0]}"
        type: NSString
    
    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?MF.*):
        class: MessageUI
        name: "Value__#{g[0]}"

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?MF.*):
        class: MessageUI
        name: "Constant__#{g[0]}"
