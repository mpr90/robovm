package: org.robovm.apple.coreanimation
include: [coregraphics.yaml, foundation.yaml, coreimage.yaml, coretext.yaml, opengles.yaml]
library: QuartzCore
framework: QuartzCore
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/QuartzCore.framework/Headers/QuartzCore.h
typedefs: {}
enums:
    CAEdgeAntialiasingMask: {bits: true}

categories:
    NSValue: # DONE
        methods:
            '-CATransform3DValue':
                name: "getTransform3DValue"
            '+valueWithCATransform3D:':
                name: "create"
    CAAnimationDelegate@NSObject: {protocol: true}
    CALayerDelegate@NSObject: {protocol: true}

classes:
    CoreAnimation:
        annotations: ['@Marshaler(NSString.AsStringMarshaler.class)']

    # Structs
    CATransform3D: {}

    CAAnimation: # DONE
        properties:
            'delegate':
                type: CAAnimationDelegate
        methods:
            '-shouldArchiveValueForKey:':
                name: "shouldArchiveValue"
            '+animation':
                name: "create"
                return_type: "CAAnimation"
            '+defaultValueForKey:':
                name: "getDefaultValue"
    CAAnimationGroup: # DONE
        properties:
            'animations':
                type: "NSArray<CAAnimation>"
    CABasicAnimation: {} # DONE
    CADisplayLink: # DONE
        methods:
            '-addToRunLoop:forMode:':
                trim_after_first_colon: true
                parameters:
                    mode:
                        type: NSString
            '-removeFromRunLoop:forMode:':
                trim_after_first_colon: true
                parameters:
                    mode:
                        type: NSString
            '+displayLinkWithTarget:selector:':
                name: "create"
    CAEAGLLayer: # DONE
        protocols: [EAGLDrawable]
    CAEmitterCell: # DONE
        properties:
            'emitterCells':
                type: "NSArray<CAEmitterCell>"
            'style':
                type: "NSDictionary<NSString, ?>"   
            'minificationFilter':
                type: NSString
            'magnificationFilter':
                type: NSString
        methods:
            '-shouldArchiveValueForKey:':
                name: "shouldArchiveValue"
            '+emitterCell':
                name: "create"
                return_type: CAEmitterCell
            '+defaultValueForKey:':
                name: "getDefaultValue"
    CAEmitterLayer: # DONE
        properties:
            'emitterCells':
                type: "NSArray<CAEmitterCell>"
            'emitterMode':
                type: NSString
            'renderMode':
                type: NSString
    CAGradientLayer: # DONE
        properties:
            'colors':
                type: "NSArray<?>" # CGColor
            'locations':
                type: "NSArray<NSNumber>"
            'type':
                type: NSString
    CAKeyframeAnimation: # DONE
        properties:
            'values':
                type: "NSArray<?>"
            'keyTimes':
                type: "NSArray<NSNumber>"
            'timingFunctions':
                type: "NSArray<CAMediaTimingFunction>"
            'tensionValues':
                type: "NSArray<NSNumber>"
            'continuityValues':
                type: "NSArray<NSNumber>"
            'biasValues':
                type: "NSArray<NSNumber>"
            'calculationMode':
                type: NSString
            'rotationMode':
                type: NSString
    CALayer: # DONE
        properties:
            'delegate':
                type: CALayerDelegate
            'edgeAntialiasingMask':
                type: CAEdgeAntialiasingMask
            'sublayers':
                type: "NSArray<CALayer>"
            'filters':
                type: "NSArray<CIFilter>"
            'backgroundFilters':
                type: "NSArray<CIFilter>"
            'actions':
                type: "NSDictionary<NSString, ?>" # CAAction
            'style':
                type: "NSDictionary<NSString, ?>"    
            'minificationFilter':
                type: NSString
            'magnificationFilter':
                type: NSString
            'contentsGravity':
                type: NSString
        methods:
            '-init':
                exclude: true
            '-initWithLayer:':
                name: "init"
                parameters:
                    layer:
                        type: CALayer
            '-presentationLayer':
                property: true
                return_type: "CALayer"
            '-modelLayer':
                property: true
                return_type: "CALayer"
            '-shouldArchiveValueForKey:':
                name: "shouldArchiveValue"
            '-affineTransform':
                property: true
            '-contentsAreFlipped':
                name: "areContentsFlipped"
            '-addSublayer:':
                trim_after_first_colon: true
            '-insertSublayer:atIndex:':
                name: "insertSublayerAt"
            '-insertSublayer:below:':
                name: "insertSublayerBelow"
            '-insertSublayer:above:':
                name: "insertSublayerAbove"
            '-replaceSublayer:with:':
                trim_after_first_colon: true
            '-convertPoint:fromLayer:':
                name: "convertPointFromLayer"
            '-convertPoint:toLayer:':
                name: "convertPointToLayer"
            '-convertRect:fromLayer:':
                name: "convertRectFromLayer"
            '-convertRect:toLayer:':
                name: "convertRectToLayer"
            '-convertTime:fromLayer:':
                name: "convertTimeFromLayer"
            '-convertTime:toLayer:':
                name: "convertTimeToLayer"
            '-hitTest:':
                trim_after_first_colon: true
            '-containsPoint:':
                trim_after_first_colon: true
            '-setNeedsDisplayInRect:':
                name: "setNeedsDisplay"
            '-drawInContext:':
                name: "draw"
            '-renderInContext:':
                name: "render"
            '-preferredFrameSize':
                property: true
            '-actionForKey:':
                name: "getAction"
            '-addAnimation:forKey:':
                trim_after_first_colon: true
            '-removeAnimationForKey:':
                name: "removeAnimation"
            '-animationKeys':
                property: true
                return_type: "NSArray<NSString>"
            '-animationForKey:':
                name: "getAnimation"
            '+layer':
                name: "create"
                return_type: "CALayer"
            '+defaultValueForKey:':
                name: "getDefaultValue"
            '+needsDisplayForKey:':
                name: "needsDisplay"
            '+defaultActionForKey:':
                name: "getDefaultAction"
            '-scrollPoint:':
                name: "scrollTo"
            '-scrollRectToVisible:':
                name: "scrollTo"
    CAMediaTimingFunction: # DONE
        methods:
            '-initWithControlPoints::::':
                name: "init"
            '-getControlPointAtIndex:values:':
                name: "getControlPoint"
                visibility: protected
            '+functionWithName:':
                name: "create"
                return_type: "CAMediaTimingFunction"
                parameters:
                    name:
                        type: NSString
            '+functionWithControlPoints::::':
                name: "create"
                return_type: "CAMediaTimingFunction"
    CAPropertyAnimation: # DONE
        methods:
            '+animationWithKeyPath:':
                name: "create"
                return_type: CAPropertyAnimation
    CAReplicatorLayer: {} # DONE
    CAScrollLayer: # DONE
        properties:
            'scrollMode':
                type: NSString
        methods:
            '-scrollToPoint:':
                name: "scrollTo"
            '-scrollToRect:':
                name: "scrollTo"
    CAShapeLayer: # DONE
        properties:
            'lineDashPattern':
                type: "NSArray<NSNumber>"
            'fillRule':
                type: NSString
            'lineCap':
                type: NSString
            'lineJoin':
                type: NSString
    CATextLayer: # DONE
        properties:
            'font':
                name: fontPtr
                type: '@Pointer long'
                visibility: protected
            'alignmentMode':
                type: NSString
            'truncationMode':
                type: NSString
    CATiledLayer: # DONE
        methods:
            '+fadeDuration':
                property: true
    CATransaction: # DONE
        methods:
            '+animationDuration':
                property: true
            '+animationTimingFunction':
                property: true
            '+disableActions':
                property: true
            '+completionBlock':
                property: true
            '+valueForKey:':
                name: "get"
                parameters:
                    key:
                        type: NSString
            '+setValue:forKey:':
                name: "put"
                visibility: "protected"
                parameters:
                    key:
                        type: NSString
    CATransformLayer: {} # DONE
    CATransition: # DONE
        properties:
            'filter':
                type: "CIFilter"
            'type':
                type: NSString
            'subtype':
                type: NSString
    CAValueFunction: # DONE
        skip_def_constructor: true
        properties:
            'name':
                type: NSString
        methods:
            '+functionWithName:':
                name: "create"
                return_type: "CAValueFunction"
                parameters:
                    name:
                        type: NSString

protocols:
    CAAction: # DONE
        methods:
            '-runActionForKey:object:arguments:':
                name: "runAction"
                parameters:
                    key:
                        type: NSString
                    dict:
                        type: "NSDictionary<NSString, ?>"
    CAMediaTiming: # DONE
        properties:
            'fillMode':
                type: NSString
    CAAnimationDelegate: # DONE
        methods:
            '-animationDidStart:':
                name: "didStart"
            '-animationDidStop:finished:':
                name: "didStop"
    CALayerDelegate: # DONE
        methods:
            '-displayLayer:':
                trim_after_first_colon: true
            '-drawLayer:inContext:':
                trim_after_first_colon: true
            '-layoutSublayersOfLayer:':
                name: "layoutSublayers"
            '-actionForLayer:forKey:':
                name: "getAction"

functions:
    CATransform3D(Make.*):
        class: CATransform3D
        name: "#{g[0]}"
    CATransform3D(.*):
        class: CATransform3D
        name: "#{g[0]}"

    CA(CurrentMediaTime):
        class: CAAnimation
        name: "get#{g[0]}"

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (CA.*):
        class: CoreAnimation
        name: "Function__#{g[0]}"

values: 

    k?CA((On|Fill|Filter|EmitterLayer|GradientLayerAxial|Animation|Gravity|MediaTimingFunction|FillRule|LineJoin|LineCap|LineJoin|Scroll|Truncation|Alignment|Transaction|Transition|ValueFunction).*):
        class: CoreAnimation
        name: "#{g[0]}"
        type: NSString
    k?CA(.*):
        class: CoreAnimation
        name: "#{g[0]}"

constants:

    CA_WARN_DEPRECATED:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?CA.*):
        class: CoreAnimation
        name: "Constant__#{g[0]}"
